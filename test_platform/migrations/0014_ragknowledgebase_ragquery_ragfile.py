# Generated by Django 4.2.20 on 2025-05-06 08:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('test_platform', '0013_testplan_testplanresult_testplansuite'),
    ]

    operations = [
        migrations.CreateModel(
            name='RAGKnowledgeBase',
            fields=[
                ('rag_id', models.AutoField(primary_key=True, serialize=False, verbose_name='知识库ID')),
                ('name', models.CharField(max_length=100, verbose_name='知识库名称')),
                ('space_id', models.CharField(max_length=100, verbose_name='空间ID')),
                ('format_type', models.IntegerField(choices=[(0, '文本'), (2, '图片')], default=0, verbose_name='知识库类型')),
                ('description', models.TextField(blank=True, null=True, verbose_name='知识库描述')),
                ('file_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='图标文件ID')),
                ('api_key', models.CharField(help_text='用于访问第三方RAG服务的密钥', max_length=500, verbose_name='API密钥')),
                ('api_base', models.CharField(default='https://api.coze.cn', max_length=200, verbose_name='API基础URL')),
                ('status', models.CharField(choices=[('creating', '创建中'), ('active', '正常'), ('error', '错误'), ('deleted', '已删除')], default='creating', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('external_dataset_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='外部知识库ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rag_knowledge_bases', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rag_knowledge_bases', to='test_platform.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': 'RAG知识库',
                'verbose_name_plural': 'RAG知识库',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='RAGQuery',
            fields=[
                ('query_id', models.AutoField(primary_key=True, serialize=False, verbose_name='查询ID')),
                ('query_text', models.TextField(verbose_name='查询文本')),
                ('response_text', models.TextField(verbose_name='响应文本')),
                ('temperature', models.FloatField(default=0.7, verbose_name='温度参数')),
                ('max_tokens', models.IntegerField(default=2048, verbose_name='最大令牌数')),
                ('token_count', models.IntegerField(default=0, verbose_name='令牌数量')),
                ('response_time', models.FloatField(default=0, verbose_name='响应时间(秒)')),
                ('referenced_files', models.TextField(blank=True, null=True, verbose_name='引用的文件')),
                ('query_time', models.DateTimeField(auto_now_add=True, verbose_name='查询时间')),
                ('knowledge_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queries', to='test_platform.ragknowledgebase', verbose_name='知识库')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rag_queries', to=settings.AUTH_USER_MODEL, verbose_name='查询用户')),
            ],
            options={
                'verbose_name': 'RAG查询',
                'verbose_name_plural': 'RAG查询',
                'ordering': ['-query_time'],
            },
        ),
        migrations.CreateModel(
            name='RAGFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False, verbose_name='文件ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='文件名称')),
                ('file_size', models.IntegerField(default=0, verbose_name='文件大小(字节)')),
                ('file_type', models.CharField(max_length=50, verbose_name='文件类型')),
                ('file_url', models.TextField(verbose_name='文件URL')),
                ('external_file_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='外部文件ID')),
                ('status', models.CharField(choices=[('uploading', '上传中'), ('processing', '处理中'), ('success', '成功'), ('failed', '失败'), ('deleted', '已删除')], default='uploading', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('knowledge_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='test_platform.ragknowledgebase', verbose_name='所属知识库')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rag_files', to=settings.AUTH_USER_MODEL, verbose_name='上传者')),
            ],
            options={
                'verbose_name': 'RAG文件',
                'verbose_name_plural': 'RAG文件',
                'ordering': ['-upload_time'],
            },
        ),
    ]
